{"remainingRequest":"A:\\project\\java\\lxgym\\src\\main\\resources\\front\\front\\node_modules\\babel-loader\\lib\\index.js!A:\\project\\java\\lxgym\\src\\main\\resources\\front\\front\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!A:\\project\\java\\lxgym\\src\\main\\resources\\front\\front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!A:\\project\\java\\lxgym\\src\\main\\resources\\front\\front\\src\\pages\\shop-order\\confirm.vue?vue&type=script&lang=js&","dependencies":[{"path":"A:\\project\\java\\lxgym\\src\\main\\resources\\front\\front\\src\\pages\\shop-order\\confirm.vue","mtime":1678095437000},{"path":"A:\\project\\java\\lxgym\\src\\main\\resources\\front\\front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"A:\\project\\java\\lxgym\\src\\main\\resources\\front\\front\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"A:\\project\\java\\lxgym\\src\\main\\resources\\front\\front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"A:\\project\\java\\lxgym\\src\\main\\resources\\front\\front\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["confirm.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div :style='{\"width\":\"1000px\",\"padding\":\"20px\",\"margin\":\"10px auto\",\"position\":\"relative\",\"background\":\"#D8D8D8\"}'>\r\n    <div class=\"section-title\" :style='{\"margin\":\"10px 0\",\"fontSize\":\"20px\",\"lineHeight\":\"54px\",\"color\":\"#333\",\"textAlign\":\"center\",\"background\":\"#f5f5f5\"}'>确认下单</div>\r\n    <el-descriptions title=\"清单列表\"></el-descriptions>\r\n    <el-table\r\n      :data=\"tableData\"\r\n      style=\"width: 100%\">\r\n      <el-table-column\r\n        label=\"商品名称\">\r\n        <template slot-scope=\"scope\">\r\n          <div class=\"shangpin\">\r\n            <el-image\r\n              style=\"width: 100px; height: 100px\"\r\n              :src=\"baseUrl + scope.row.picture\"\r\n              fit=\"fill\"></el-image>\r\n            <span style=\"margin-left: 10px\">{{ scope.row.goodname }}</span>\r\n          </div>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column\r\n        label=\"价格\">\r\n        <template slot-scope=\"scope\">\r\n          <span v-if=\"type == 2\">{{ scope.row.price }} 积分</span>\r\n          <span v-else><span :style='{\"fontSize\":\"12px\"}'>￥</span>{{ scope.row.price }}</span>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column v-if=\"seat==1\"\r\n        label=\"座位\">\r\n        <template slot-scope=\"scope\">\r\n          <span>{{ scope.row.activeSeat }}</span>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column v-if=\"seat!=1\"\r\n        label=\"数量\">\r\n        <template slot-scope=\"scope\">\r\n          <span>{{ scope.row.buynumber }}</span>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column\r\n        label=\"总价\">\r\n        <template slot-scope=\"scope\">\r\n          <span v-if=\"type == 2\">{{ scope.row.price * scope.row.buynumber }} 积分</span>\r\n          <span v-else-if=\"seat==1\"><span :style='{\"fontSize\":\"12px\"}'>￥</span>{{scope.row.total}}</span>\r\n          <span v-else><span :style='{\"fontSize\":\"12px\"}'>￥</span>{{ (scope.row.price * scope.row.buynumber).toFixed(2) }}</span>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n    <div style=\"width: 100%;padding: 12px;box-sizing: border-box;display: flex;align-items: center;\">\r\n        <span style=\"width: 80px; font-size: 14px;\">备注：</span><el-input type=\"textarea\" v-model=\"remark\" placeholder=\"备注\" style=\"width: calc(100% - 80px);\"></el-input>\r\n    </div>\r\n    <div class=\"buy\" v-if=\"seat!=1 && tableData.length > 0\">\r\n      <template v-if=\"type == 2\">\r\n        <span style=\"color: red;margin-right: 10px;font-weight: 700;\">总价：{{totalPrice}} 积分</span>\r\n        <el-button type=\"warning\" @click=\"jfClick\">兑换</el-button>\r\n      </template>\r\n      <template v-else>\r\n        <span style=\"color: red;margin-right: 10px;font-weight: 700;\">总价：<span :style='{\"fontSize\":\"12px\"}'>￥</span>{{totalPrice}}</span>\r\n        <el-button type=\"success\" @click=\"payClick\">支付</el-button>\r\n      </template>\r\n    </div>\r\n    <div class=\"buy\" v-if=\"seat==1 && tableData.length > 0\">\r\n      <template>\r\n        <span style=\"color: red;margin-right: 10px;font-weight: 700;\">总价：<span :style='{\"fontSize\":\"12px\"}'>￥</span>{{totalPrice}}</span>\r\n        <el-button type=\"success\" @click=\"xzPayClick\">支付</el-button>\r\n      </template>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import config from '@/config/config'\r\n  export default {\r\n    data() {\r\n      return {\r\n        baseUrl: config.baseUrl,\r\n        userTableName: localStorage.getItem('UserTableName'),\r\n        addressList: [],\r\n        tableData: [],\r\n        currentRow: null,\r\n        radio: -1,\r\n        order: {\r\n          address: \"\",\r\n          buynumber: 0,\r\n          consignee: '',\r\n          discountprice: 0,\r\n          discounttotal: 0,\r\n          goodid: 0,\r\n          goodname: \"\",\r\n          orderid: \"\",\r\n          picture: \"\",\r\n          price: 0,\r\n          status: \"未支付\",\r\n          tablename: \"\",\r\n          tel: \"\",\r\n          total: 0,\r\n          type: 1,\r\n          userid: localStorage.getItem('userid')\r\n        },\r\n        user: {},\r\n        type: 0,\r\n        seat: 0,\r\n        buynumber: 0,\r\n        remark:''\r\n      }\r\n    },\r\n    created() {\r\n      if(this.$route.query.type != undefined) {\r\n        this.type = this.$route.query.type;\r\n      }\r\n      if(this.$route.query.seat != undefined) {\r\n        this.seat = this.$route.query.seat;\r\n      }\r\n      if(this.$route.query.tablename != undefined) {\r\n        this.order.tablename = this.$route.query.tablename;\r\n      }\r\n\r\n      this.getSession();\r\n      this.getAddrList();\r\n      // 获取商品购买的清单列表\r\n      var orderGoods = localStorage.getItem('orderGoods')\r\n      // 转换成json类型，localstorage保存的是string数据\r\n      this.tableData = JSON.parse(orderGoods);\r\n      this.type = this.$route.query.type;\r\n    },\r\n    methods: {\r\n      getSession() {\r\n        this.$http.get(`${this.userTableName}/session`, {emulateJSON: true}).then(res => {\r\n          if (res.data.code == 0) {\r\n            this.user = res.data.data;\r\n          }\r\n        });\r\n      },\r\n      getCurrentRow(index) {\r\n        this.radio = index;　\r\n      },\r\n      getAddrList() {\r\n        this.$http.get('address/list', {params: {userid: localStorage.getItem('userid')}}).then(res => {\r\n          if (res.data.code == 0) {\r\n            this.addressList = res.data.data.list;\r\n            this.addressList.forEach((item, index) => {\r\n              if (item.isdefault == '是') {\r\n                this.radio = index;\r\n              }\r\n            });\r\n          }\r\n        });\r\n      },\r\n      getCartList() {\r\n        this.$http.get('cart/list', {params: {page: 1, limit: 1000, userid: localStorage.getItem('userid')}}).then(res => {\r\n          if (res.data.code == 0) {\r\n            this.tableData = res.data.data.list;\r\n            if (this.$route.query.id != undefined || this.$route.query.type != undefined) {\r\n              this.tableData = [];\r\n              this.buynumber = this.$route.query.buynumber;\r\n              let detailObj = JSON.parse(this.$route.query.detailObj);\r\n              this.order.tablename = this.$route.query.tablename;\r\n              if (this.$route.query.type == 1) {\r\n                this.tableData.push({\r\n                  buynumber: this.buynumber,\r\n                  goodid: detailObj.id,\r\n                  picture: this.$route.query.picture,\r\n                  goodname: this.$route.query.goodname,\r\n                  tablename: this.$route.query.tablename,\r\n                  userid: localStorage.getItem('userid'),\r\n                  price: this.$route.query.price\r\n                });\r\n              }\r\n              if (this.$route.query.type == 2) {\r\n                this.tableData.push({\r\n                  buynumber: this.buynumber,\r\n                  goodid: detailObj.id,\r\n                  picture: this.$route.query.picture,\r\n                  goodname: this.$route.query.goodname,\r\n                  tablename: this.$route.query.tablename,\r\n                  userid: localStorage.getItem('userid'),\r\n                  jf: detailObj.jf\r\n                });\r\n              }\r\n            }\r\n          }\r\n        });\r\n      },\r\n      handleChange(value, index, goodid) {\r\n        this.$http.get(`${this.order.tablename}/detail/${goodid}`).then(res => {\r\n          if (res.data.code == 0 && value > res.data.data.onelimittimes) {\r\n            this.tableData[index].buynumber = --value;\r\n            this.$message.error(`每人单次只能购买${res.data.data.onelimittimes}件`);\r\n          }\r\n        });\r\n      },\r\n        // 正常下单，生成订单，减少余额，添加积分，减少库存，修改状态已支付\r\n        payClick() {\r\n\r\n            // 生成订单\r\n            this.tableData.forEach(item => {\r\n                // 获取商品详情信息\r\n                this.$http.get(`${item.tablename}/info/${item.goodid}`).then(res => {\r\n                    // 订单编号\r\n                    var orderId = this.createOrder();\r\n                    let data = res.data.data;\r\n                    data.alllimittimes = data.alllimittimes - item.buynumber;\r\n                    // 更新库存信息\r\n                    this.$http.post(`${item.tablename}/update`, data).then(res => {\r\n                        // 添加订单信息\r\n                        let order = {\r\n                            orderid: orderId,\r\n                            tablename: item.tablename,\r\n                            userid: this.user.id,\r\n                            goodid: item.goodid,\r\n                            goodname: item.goodname,\r\n                            picture: item.picture,\r\n                            buynumber: item.buynumber,\r\n                            discountprice: item.price,\r\n                            price: item.price,\r\n                            total: item.price * item.buynumber,\r\n                            discounttotal: item.price * item.buynumber,\r\n                            type: this.type?this.type:1,\r\n                            //total: this.totalPrice,\r\n                            remark: this.remark,\r\n                            status: '未支付'\r\n                        }\r\n                        this.$http.post('orders/add', order).then(res => {\r\n                            // 减少余额，更新订单状态\r\n                            // 判断余额是否充足\r\n                            if (Number(this.user.money) < Number(item.price * item.buynumber)) {\r\n                                this.$message({\r\n                                    message: '余额不足，请先充值',\r\n                                    type: 'error',\r\n                                    duration: 1500\r\n                                });\r\n                                return\r\n                            }\r\n                            // 如果该商品存在积分\r\n                            if (data.jf) {\r\n                                this.user.jf = Number(this.user.jf) + Number(item.price * item.buynumber);\r\n                            }\r\n                            this.user.money = this.user.money - item.price * item.buynumber;\r\n                            // 更新用户余额\r\n                            this.$http.post(`${this.userTableName}/update`, this.user).then(res => {\r\n                                order.status = '已支付'\r\n                                var params = {\r\n                                    orderid: orderId,\r\n                                    page: 1,\r\n                                    limit: 1,\r\n                                }\r\n                                this.$http.get('orders/list', {params: params}).then(res => {\r\n                                    order.id = res.data.data.list[0].id;\r\n                                    this.$http.post(`orders/update`, order).then(res => {\r\n                                        // 删除购物车数据(如果是购物车下单)\r\n                                        if (item.id) {\r\n                                            this.$http.post('cart/delete', [item.id]).then(res => {});\r\n                                        }\r\n                                        this.$message({\r\n                                              message: '购买成功',\r\n                                              type: 'success',\r\n                                              duration: 1500,\r\n                                              onClose: () => {\r\n                                                this.$router.push('/index/shop-order/order');\r\n                                              }\r\n                                        });\r\n                                    });\r\n                                });\r\n                            });\r\n                        });\r\n                    });\r\n                });\r\n            });\r\n        },\r\n\r\n        // 积分兑换，生成订单，减少用户积分，减少库存\r\n        jfClick() {\r\n\r\n            // 生成订单\r\n            this.tableData.forEach(item => {\r\n                // 订单编号\r\n                var orderId = this.createOrder();\r\n                this.$http.get(`${item.tablename}/info/${item.goodid}`).then(res => {\r\n                    let data = res.data.data;\r\n                    // 减少库存\r\n                    data.alllimittimes = data.alllimittimes - item.buynumber;\r\n                    // 更新库存信息\r\n                    this.$http.post(`${item.tablename}/update`, data).then(res => {\r\n                        // 判断积分是否充足\r\n                        if (this.user.jf < this.totalPrice) {\r\n                            this.$message({\r\n                                message: '积分不足，兑换失败',\r\n                                type: 'error',\r\n                                duration: 1500\r\n                            });\r\n                            return\r\n                        }\r\n                        // 添加订单信息\r\n                        let order = {\r\n                            orderid: orderId,\r\n                            tablename: item.tablename,\r\n                            userid: this.user.id,\r\n                            goodid: item.goodid,\r\n                            goodname: item.goodname,\r\n                            picture: item.picture,\r\n                            buynumber: item.buynumber,\r\n                            discountprice: item.price,\r\n                            price: item.price,\r\n                            total: item.price * item.buynumber,\r\n                            discounttotal: item.price * item.buynumber,\r\n                            type: 2,\r\n                            total: this.totalPrice,\r\n                            status: '已支付'\r\n                        }\r\n                        this.$http.post('orders/add', order).then(res => {\r\n                            this.user.jf = this.user.jf - item.price * item.buynumber;\r\n                            // 更新用户余额\r\n                            this.$http.post(`${this.userTableName}/update`, this.user).then(res => {\r\n                                this.$message({\r\n                                      message: '兑换成功',\r\n                                      type: 'success',\r\n                                      duration: 1500,\r\n                                      onClose: () => {\r\n                                        this.$router.push('/index/shop-order/order');\r\n                                      }\r\n                                });\r\n                            });\r\n                        });\r\n                    });\r\n                });\r\n            });\r\n        },\r\n        // 选座下单,生成订单，减少余额，添加积分，减少库存，修改状态为已支付\r\n        xzPayClick() {\r\n            // 生成订单\r\n            this.tableData.forEach(item => {\r\n                // 订单编号\r\n                var orderId = this.createOrder();\r\n                // 获取商品详情信息\r\n                this.$http.get(`${item.tablename}/info/${item.goodid}`).then(res => {\r\n                    let data = res.data.data;\r\n                    // 减少库存\r\n                    data.alllimittimes = data.alllimittimes - item.buynumber;\r\n                    // 获取已经被预定的座位号\r\n                    let selectArray = data.selected?data.selected.split(','):[];\r\n                    // 获取用户预定的座位号\r\n                    let activeArray = item.address.split(',');\r\n                    // 新的预定座位号\r\n                    let newSelectArray = selectArray.concat(activeArray);\r\n                    // 赋值给参数\r\n                    data.selected = newSelectArray.join(',');\r\n                    // 更新库存,座位信息\r\n                    this.$http.post(`${item.tablename}/update`, data).then(res => {\r\n                        // 添加订单信息\r\n                        let order = {\r\n                            orderid: orderId,\r\n                            tablename: item.tablename,\r\n                            userid: this.user.id,\r\n                            goodid: item.goodid,\r\n                            goodname: item.goodname,\r\n                            picture: item.picture,\r\n                            buynumber: item.buynumber,\r\n                            discountprice: item.price,\r\n                            price: item.price,\r\n                            total: item.total,\r\n                            discounttotal: item.total,\r\n                            type: 1,\r\n                            address: item.address,\r\n                            status: '未支付'\r\n                        }\r\n                        this.$http.post('orders/add', order).then(res => {\r\n                            // 减少余额，更新订单状态\r\n                            // 判断余额是否充足\r\n                            if (Number(this.user.money) < Number(item.price * item.buynumber)) {\r\n                                this.$message({\r\n                                    message: '余额不足，请先充值',\r\n                                    type: 'error',\r\n                                    duration: 1500\r\n                                });\r\n                                return\r\n                            }\r\n                            // 如果该商品存在积分\r\n                            if (data.jf) {\r\n                                this.user.jf = Number(this.user.jf) + Number(data.jf * item.buynumber);\r\n                            }\r\n                            this.user.money = this.user.money - item.price * item.buynumber;\r\n                            // 更新用户余额\r\n                            this.$http.post(`${this.userTableName}/update`, this.user).then(res => {\r\n                                order.status = '已支付'\r\n                                var params = {\r\n                                    orderid: orderId,\r\n                                    page: 1,\r\n                                    limit: 1,\r\n                                }\r\n                                this.$http.get('orders/list', {params: params}).then(res => {\r\n                                    order.id = res.data.data.list[0].id;\r\n                                    this.$http.post(`orders/update`, order).then(res => {\r\n                                        this.$message({\r\n                                              message: '购买成功',\r\n                                              type: 'success',\r\n                                              duration: 1500,\r\n                                              onClose: () => {\r\n                                                this.$router.push('/index/shop-order/order');\r\n                                              }\r\n                                        });\r\n                                    });\r\n                                });\r\n                            });\r\n                        });\r\n                    });\r\n                });\r\n            });\r\n        },\r\n      createOrder() {\r\n        let order = '';\r\n        let now = new Date();\r\n        order += now.getFullYear();\r\n        order += now.getMonth() + 1;\r\n        order += now.getDate();\r\n        order += now.getHours();\r\n        order += now.getMinutes();\r\n        order += now.getSeconds();\r\n        order += now.getMilliseconds();\r\n\r\n        return order;\r\n      }\r\n    },\r\n    computed: {\r\n      totalPrice() {\r\n        let totalPrice = 0;\r\n        this.tableData.forEach(item => {\r\n            totalPrice += item.price * item.buynumber;\r\n        });\r\n\r\n        return totalPrice.toFixed(2);\r\n      },\r\n      totalJifen() {\r\n        let totalJifen = 0;\r\n        this.tableData.forEach(item => {\r\n          totalJifen += item.jf * this.buynumber;\r\n        });\r\n\r\n        return totalJifen;\r\n      }\r\n    }\r\n  }\r\n</script>\r\n\r\n<style rel=\"stylesheet/scss\" lang=\"scss\" scoped>\r\n  .section {\r\n    width: 900px;\r\n    margin: 0 auto;\r\n  }\r\n\r\n  .shangpin {\r\n    display: flex;\r\n  }\r\n  .buy {\r\n    text-align: right;\r\n    padding-right: 82px;\r\n  }\r\n</style>\r\n"],"sourceRoot":"src/pages/shop-order"}]}