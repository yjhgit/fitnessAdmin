{"remainingRequest":"A:\\project\\java\\lxgym\\src\\main\\resources\\front\\front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!A:\\project\\java\\lxgym\\src\\main\\resources\\front\\front\\src\\pages\\shop-order\\confirm.vue?vue&type=script&lang=js&","dependencies":[{"path":"A:\\project\\java\\lxgym\\src\\main\\resources\\front\\front\\src\\pages\\shop-order\\confirm.vue","mtime":1678095437000},{"path":"A:\\project\\java\\lxgym\\src\\main\\resources\\front\\front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"A:\\project\\java\\lxgym\\src\\main\\resources\\front\\front\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"A:\\project\\java\\lxgym\\src\\main\\resources\\front\\front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"A:\\project\\java\\lxgym\\src\\main\\resources\\front\\front\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["confirm.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsfile":"confirm.vue","sourceRoot":"src/pages/shop-order","sourcesContent":["<template>\r\n  <div :style='{\"width\":\"1000px\",\"padding\":\"20px\",\"margin\":\"10px auto\",\"position\":\"relative\",\"background\":\"#D8D8D8\"}'>\r\n    <div class=\"section-title\" :style='{\"margin\":\"10px 0\",\"fontSize\":\"20px\",\"lineHeight\":\"54px\",\"color\":\"#333\",\"textAlign\":\"center\",\"background\":\"#f5f5f5\"}'>确认下单</div>\r\n    <el-descriptions title=\"清单列表\"></el-descriptions>\r\n    <el-table\r\n      :data=\"tableData\"\r\n      style=\"width: 100%\">\r\n      <el-table-column\r\n        label=\"商品名称\">\r\n        <template slot-scope=\"scope\">\r\n          <div class=\"shangpin\">\r\n            <el-image\r\n              style=\"width: 100px; height: 100px\"\r\n              :src=\"baseUrl + scope.row.picture\"\r\n              fit=\"fill\"></el-image>\r\n            <span style=\"margin-left: 10px\">{{ scope.row.goodname }}</span>\r\n          </div>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column\r\n        label=\"价格\">\r\n        <template slot-scope=\"scope\">\r\n          <span v-if=\"type == 2\">{{ scope.row.price }} 积分</span>\r\n          <span v-else><span :style='{\"fontSize\":\"12px\"}'>￥</span>{{ scope.row.price }}</span>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column v-if=\"seat==1\"\r\n        label=\"座位\">\r\n        <template slot-scope=\"scope\">\r\n          <span>{{ scope.row.activeSeat }}</span>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column v-if=\"seat!=1\"\r\n        label=\"数量\">\r\n        <template slot-scope=\"scope\">\r\n          <span>{{ scope.row.buynumber }}</span>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column\r\n        label=\"总价\">\r\n        <template slot-scope=\"scope\">\r\n          <span v-if=\"type == 2\">{{ scope.row.price * scope.row.buynumber }} 积分</span>\r\n          <span v-else-if=\"seat==1\"><span :style='{\"fontSize\":\"12px\"}'>￥</span>{{scope.row.total}}</span>\r\n          <span v-else><span :style='{\"fontSize\":\"12px\"}'>￥</span>{{ (scope.row.price * scope.row.buynumber).toFixed(2) }}</span>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n    <div style=\"width: 100%;padding: 12px;box-sizing: border-box;display: flex;align-items: center;\">\r\n        <span style=\"width: 80px; font-size: 14px;\">备注：</span><el-input type=\"textarea\" v-model=\"remark\" placeholder=\"备注\" style=\"width: calc(100% - 80px);\"></el-input>\r\n    </div>\r\n    <div class=\"buy\" v-if=\"seat!=1 && tableData.length > 0\">\r\n      <template v-if=\"type == 2\">\r\n        <span style=\"color: red;margin-right: 10px;font-weight: 700;\">总价：{{totalPrice}} 积分</span>\r\n        <el-button type=\"warning\" @click=\"jfClick\">兑换</el-button>\r\n      </template>\r\n      <template v-else>\r\n        <span style=\"color: red;margin-right: 10px;font-weight: 700;\">总价：<span :style='{\"fontSize\":\"12px\"}'>￥</span>{{totalPrice}}</span>\r\n        <el-button type=\"success\" @click=\"payClick\">支付</el-button>\r\n      </template>\r\n    </div>\r\n    <div class=\"buy\" v-if=\"seat==1 && tableData.length > 0\">\r\n      <template>\r\n        <span style=\"color: red;margin-right: 10px;font-weight: 700;\">总价：<span :style='{\"fontSize\":\"12px\"}'>￥</span>{{totalPrice}}</span>\r\n        <el-button type=\"success\" @click=\"xzPayClick\">支付</el-button>\r\n      </template>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import config from '@/config/config'\r\n  export default {\r\n    data() {\r\n      return {\r\n        baseUrl: config.baseUrl,\r\n        userTableName: localStorage.getItem('UserTableName'),\r\n        addressList: [],\r\n        tableData: [],\r\n        currentRow: null,\r\n        radio: -1,\r\n        order: {\r\n          address: \"\",\r\n          buynumber: 0,\r\n          consignee: '',\r\n          discountprice: 0,\r\n          discounttotal: 0,\r\n          goodid: 0,\r\n          goodname: \"\",\r\n          orderid: \"\",\r\n          picture: \"\",\r\n          price: 0,\r\n          status: \"未支付\",\r\n          tablename: \"\",\r\n          tel: \"\",\r\n          total: 0,\r\n          type: 1,\r\n          userid: localStorage.getItem('userid')\r\n        },\r\n        user: {},\r\n        type: 0,\r\n        seat: 0,\r\n        buynumber: 0,\r\n        remark:''\r\n      }\r\n    },\r\n    created() {\r\n      if(this.$route.query.type != undefined) {\r\n        this.type = this.$route.query.type;\r\n      }\r\n      if(this.$route.query.seat != undefined) {\r\n        this.seat = this.$route.query.seat;\r\n      }\r\n      if(this.$route.query.tablename != undefined) {\r\n        this.order.tablename = this.$route.query.tablename;\r\n      }\r\n\r\n      this.getSession();\r\n      this.getAddrList();\r\n      // 获取商品购买的清单列表\r\n      var orderGoods = localStorage.getItem('orderGoods')\r\n      // 转换成json类型，localstorage保存的是string数据\r\n      this.tableData = JSON.parse(orderGoods);\r\n      this.type = this.$route.query.type;\r\n    },\r\n    methods: {\r\n      getSession() {\r\n        this.$http.get(`${this.userTableName}/session`, {emulateJSON: true}).then(res => {\r\n          if (res.data.code == 0) {\r\n            this.user = res.data.data;\r\n          }\r\n        });\r\n      },\r\n      getCurrentRow(index) {\r\n        this.radio = index;　\r\n      },\r\n      getAddrList() {\r\n        this.$http.get('address/list', {params: {userid: localStorage.getItem('userid')}}).then(res => {\r\n          if (res.data.code == 0) {\r\n            this.addressList = res.data.data.list;\r\n            this.addressList.forEach((item, index) => {\r\n              if (item.isdefault == '是') {\r\n                this.radio = index;\r\n              }\r\n            });\r\n          }\r\n        });\r\n      },\r\n      getCartList() {\r\n        this.$http.get('cart/list', {params: {page: 1, limit: 1000, userid: localStorage.getItem('userid')}}).then(res => {\r\n          if (res.data.code == 0) {\r\n            this.tableData = res.data.data.list;\r\n            if (this.$route.query.id != undefined || this.$route.query.type != undefined) {\r\n              this.tableData = [];\r\n              this.buynumber = this.$route.query.buynumber;\r\n              let detailObj = JSON.parse(this.$route.query.detailObj);\r\n              this.order.tablename = this.$route.query.tablename;\r\n              if (this.$route.query.type == 1) {\r\n                this.tableData.push({\r\n                  buynumber: this.buynumber,\r\n                  goodid: detailObj.id,\r\n                  picture: this.$route.query.picture,\r\n                  goodname: this.$route.query.goodname,\r\n                  tablename: this.$route.query.tablename,\r\n                  userid: localStorage.getItem('userid'),\r\n                  price: this.$route.query.price\r\n                });\r\n              }\r\n              if (this.$route.query.type == 2) {\r\n                this.tableData.push({\r\n                  buynumber: this.buynumber,\r\n                  goodid: detailObj.id,\r\n                  picture: this.$route.query.picture,\r\n                  goodname: this.$route.query.goodname,\r\n                  tablename: this.$route.query.tablename,\r\n                  userid: localStorage.getItem('userid'),\r\n                  jf: detailObj.jf\r\n                });\r\n              }\r\n            }\r\n          }\r\n        });\r\n      },\r\n      handleChange(value, index, goodid) {\r\n        this.$http.get(`${this.order.tablename}/detail/${goodid}`).then(res => {\r\n          if (res.data.code == 0 && value > res.data.data.onelimittimes) {\r\n            this.tableData[index].buynumber = --value;\r\n            this.$message.error(`每人单次只能购买${res.data.data.onelimittimes}件`);\r\n          }\r\n        });\r\n      },\r\n        // 正常下单，生成订单，减少余额，添加积分，减少库存，修改状态已支付\r\n        payClick() {\r\n\r\n            // 生成订单\r\n            this.tableData.forEach(item => {\r\n                // 获取商品详情信息\r\n                this.$http.get(`${item.tablename}/info/${item.goodid}`).then(res => {\r\n                    // 订单编号\r\n                    var orderId = this.createOrder();\r\n                    let data = res.data.data;\r\n                    data.alllimittimes = data.alllimittimes - item.buynumber;\r\n                    // 更新库存信息\r\n                    this.$http.post(`${item.tablename}/update`, data).then(res => {\r\n                        // 添加订单信息\r\n                        let order = {\r\n                            orderid: orderId,\r\n                            tablename: item.tablename,\r\n                            userid: this.user.id,\r\n                            goodid: item.goodid,\r\n                            goodname: item.goodname,\r\n                            picture: item.picture,\r\n                            buynumber: item.buynumber,\r\n                            discountprice: item.price,\r\n                            price: item.price,\r\n                            total: item.price * item.buynumber,\r\n                            discounttotal: item.price * item.buynumber,\r\n                            type: this.type?this.type:1,\r\n                            //total: this.totalPrice,\r\n                            remark: this.remark,\r\n                            status: '未支付'\r\n                        }\r\n                        this.$http.post('orders/add', order).then(res => {\r\n                            // 减少余额，更新订单状态\r\n                            // 判断余额是否充足\r\n                            if (Number(this.user.money) < Number(item.price * item.buynumber)) {\r\n                                this.$message({\r\n                                    message: '余额不足，请先充值',\r\n                                    type: 'error',\r\n                                    duration: 1500\r\n                                });\r\n                                return\r\n                            }\r\n                            // 如果该商品存在积分\r\n                            if (data.jf) {\r\n                                this.user.jf = Number(this.user.jf) + Number(item.price * item.buynumber);\r\n                            }\r\n                            this.user.money = this.user.money - item.price * item.buynumber;\r\n                            // 更新用户余额\r\n                            this.$http.post(`${this.userTableName}/update`, this.user).then(res => {\r\n                                order.status = '已支付'\r\n                                var params = {\r\n                                    orderid: orderId,\r\n                                    page: 1,\r\n                                    limit: 1,\r\n                                }\r\n                                this.$http.get('orders/list', {params: params}).then(res => {\r\n                                    order.id = res.data.data.list[0].id;\r\n                                    this.$http.post(`orders/update`, order).then(res => {\r\n                                        // 删除购物车数据(如果是购物车下单)\r\n                                        if (item.id) {\r\n                                            this.$http.post('cart/delete', [item.id]).then(res => {});\r\n                                        }\r\n                                        this.$message({\r\n                                              message: '购买成功',\r\n                                              type: 'success',\r\n                                              duration: 1500,\r\n                                              onClose: () => {\r\n                                                this.$router.push('/index/shop-order/order');\r\n                                              }\r\n                                        });\r\n                                    });\r\n                                });\r\n                            });\r\n                        });\r\n                    });\r\n                });\r\n            });\r\n        },\r\n\r\n        // 积分兑换，生成订单，减少用户积分，减少库存\r\n        jfClick() {\r\n\r\n            // 生成订单\r\n            this.tableData.forEach(item => {\r\n                // 订单编号\r\n                var orderId = this.createOrder();\r\n                this.$http.get(`${item.tablename}/info/${item.goodid}`).then(res => {\r\n                    let data = res.data.data;\r\n                    // 减少库存\r\n                    data.alllimittimes = data.alllimittimes - item.buynumber;\r\n                    // 更新库存信息\r\n                    this.$http.post(`${item.tablename}/update`, data).then(res => {\r\n                        // 判断积分是否充足\r\n                        if (this.user.jf < this.totalPrice) {\r\n                            this.$message({\r\n                                message: '积分不足，兑换失败',\r\n                                type: 'error',\r\n                                duration: 1500\r\n                            });\r\n                            return\r\n                        }\r\n                        // 添加订单信息\r\n                        let order = {\r\n                            orderid: orderId,\r\n                            tablename: item.tablename,\r\n                            userid: this.user.id,\r\n                            goodid: item.goodid,\r\n                            goodname: item.goodname,\r\n                            picture: item.picture,\r\n                            buynumber: item.buynumber,\r\n                            discountprice: item.price,\r\n                            price: item.price,\r\n                            total: item.price * item.buynumber,\r\n                            discounttotal: item.price * item.buynumber,\r\n                            type: 2,\r\n                            total: this.totalPrice,\r\n                            status: '已支付'\r\n                        }\r\n                        this.$http.post('orders/add', order).then(res => {\r\n                            this.user.jf = this.user.jf - item.price * item.buynumber;\r\n                            // 更新用户余额\r\n                            this.$http.post(`${this.userTableName}/update`, this.user).then(res => {\r\n                                this.$message({\r\n                                      message: '兑换成功',\r\n                                      type: 'success',\r\n                                      duration: 1500,\r\n                                      onClose: () => {\r\n                                        this.$router.push('/index/shop-order/order');\r\n                                      }\r\n                                });\r\n                            });\r\n                        });\r\n                    });\r\n                });\r\n            });\r\n        },\r\n        // 选座下单,生成订单，减少余额，添加积分，减少库存，修改状态为已支付\r\n        xzPayClick() {\r\n            // 生成订单\r\n            this.tableData.forEach(item => {\r\n                // 订单编号\r\n                var orderId = this.createOrder();\r\n                // 获取商品详情信息\r\n                this.$http.get(`${item.tablename}/info/${item.goodid}`).then(res => {\r\n                    let data = res.data.data;\r\n                    // 减少库存\r\n                    data.alllimittimes = data.alllimittimes - item.buynumber;\r\n                    // 获取已经被预定的座位号\r\n                    let selectArray = data.selected?data.selected.split(','):[];\r\n                    // 获取用户预定的座位号\r\n                    let activeArray = item.address.split(',');\r\n                    // 新的预定座位号\r\n                    let newSelectArray = selectArray.concat(activeArray);\r\n                    // 赋值给参数\r\n                    data.selected = newSelectArray.join(',');\r\n                    // 更新库存,座位信息\r\n                    this.$http.post(`${item.tablename}/update`, data).then(res => {\r\n                        // 添加订单信息\r\n                        let order = {\r\n                            orderid: orderId,\r\n                            tablename: item.tablename,\r\n                            userid: this.user.id,\r\n                            goodid: item.goodid,\r\n                            goodname: item.goodname,\r\n                            picture: item.picture,\r\n                            buynumber: item.buynumber,\r\n                            discountprice: item.price,\r\n                            price: item.price,\r\n                            total: item.total,\r\n                            discounttotal: item.total,\r\n                            type: 1,\r\n                            address: item.address,\r\n                            status: '未支付'\r\n                        }\r\n                        this.$http.post('orders/add', order).then(res => {\r\n                            // 减少余额，更新订单状态\r\n                            // 判断余额是否充足\r\n                            if (Number(this.user.money) < Number(item.price * item.buynumber)) {\r\n                                this.$message({\r\n                                    message: '余额不足，请先充值',\r\n                                    type: 'error',\r\n                                    duration: 1500\r\n                                });\r\n                                return\r\n                            }\r\n                            // 如果该商品存在积分\r\n                            if (data.jf) {\r\n                                this.user.jf = Number(this.user.jf) + Number(data.jf * item.buynumber);\r\n                            }\r\n                            this.user.money = this.user.money - item.price * item.buynumber;\r\n                            // 更新用户余额\r\n                            this.$http.post(`${this.userTableName}/update`, this.user).then(res => {\r\n                                order.status = '已支付'\r\n                                var params = {\r\n                                    orderid: orderId,\r\n                                    page: 1,\r\n                                    limit: 1,\r\n                                }\r\n                                this.$http.get('orders/list', {params: params}).then(res => {\r\n                                    order.id = res.data.data.list[0].id;\r\n                                    this.$http.post(`orders/update`, order).then(res => {\r\n                                        this.$message({\r\n                                              message: '购买成功',\r\n                                              type: 'success',\r\n                                              duration: 1500,\r\n                                              onClose: () => {\r\n                                                this.$router.push('/index/shop-order/order');\r\n                                              }\r\n                                        });\r\n                                    });\r\n                                });\r\n                            });\r\n                        });\r\n                    });\r\n                });\r\n            });\r\n        },\r\n      createOrder() {\r\n        let order = '';\r\n        let now = new Date();\r\n        order += now.getFullYear();\r\n        order += now.getMonth() + 1;\r\n        order += now.getDate();\r\n        order += now.getHours();\r\n        order += now.getMinutes();\r\n        order += now.getSeconds();\r\n        order += now.getMilliseconds();\r\n\r\n        return order;\r\n      }\r\n    },\r\n    computed: {\r\n      totalPrice() {\r\n        let totalPrice = 0;\r\n        this.tableData.forEach(item => {\r\n            totalPrice += item.price * item.buynumber;\r\n        });\r\n\r\n        return totalPrice.toFixed(2);\r\n      },\r\n      totalJifen() {\r\n        let totalJifen = 0;\r\n        this.tableData.forEach(item => {\r\n          totalJifen += item.jf * this.buynumber;\r\n        });\r\n\r\n        return totalJifen;\r\n      }\r\n    }\r\n  }\r\n</script>\r\n\r\n<style rel=\"stylesheet/scss\" lang=\"scss\" scoped>\r\n  .section {\r\n    width: 900px;\r\n    margin: 0 auto;\r\n  }\r\n\r\n  .shangpin {\r\n    display: flex;\r\n  }\r\n  .buy {\r\n    text-align: right;\r\n    padding-right: 82px;\r\n  }\r\n</style>\r\n"]}]}