{"remainingRequest":"A:\\project\\java\\lxgym\\src\\main\\resources\\front\\front\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!A:\\project\\java\\lxgym\\src\\main\\resources\\front\\front\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!A:\\project\\java\\lxgym\\src\\main\\resources\\front\\front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!A:\\project\\java\\lxgym\\src\\main\\resources\\front\\front\\src\\pages\\jiaolianyuyue\\listshow.vue?vue&type=template&id=25177f18&","dependencies":[{"path":"A:\\project\\java\\lxgym\\src\\main\\resources\\front\\front\\src\\pages\\jiaolianyuyue\\listshow.vue","mtime":1680163731741},{"path":"A:\\project\\java\\lxgym\\src\\main\\resources\\front\\front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"A:\\project\\java\\lxgym\\src\\main\\resources\\front\\front\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"A:\\project\\java\\lxgym\\src\\main\\resources\\front\\front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"A:\\project\\java\\lxgym\\src\\main\\resources\\front\\front\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}